import numpy as np
import plotly.offline as pyo
import plotly.graph_objs as go
import pandas as pd
import plotly.express as px

###################################
full_data = pd.read_csv('full_data.csv')
full_data[['5yr-avg_rdness','5yr-avg_vuln']] = full_data[['5yr-avg_rdness','5yr-avg_vuln']].round(3)
full_data=full_data[~full_data['5yr-avg_gdp'].isna()]

data = [go.Scatter(y=full_data['5yr-avg_rdness'], 
                    x=full_data['5yr-avg_vuln'],
                    mode='markers',
                    text=full_data['Name'],
                    marker=dict(size=10,
                                line_width=2,
                                line_color='black'),
                    hovertemplate=
                                    "Country: <b>%{text}</b><br>" +
                                    "Vulnerability index: %{x} <br>" +
                                    "Readiness index: %{y} <br>"
                                    "<extra></extra>"
                    )]
layout=go.Layout(title="Climate change vulnerability and readiness",
                title_x=0.5,
                xaxis_title="Vulnerability index, 2015-2019 avg. (0 to 1, lower is better)",
                hovermode="closest",
                yaxis_title="Readiness index, 2015-2019 avg. (0 to 1, higher is better)")
fig=go.Figure(data=data, layout=layout)

pyo.plot(fig, filename="chart_1.html")

#####################################
regions = list(full_data['Region'].unique())

data = []

for region in regions:
    region_df = full_data[full_data['Region']==region]
    x = region_df['5yr-avg_vuln']
    y = region_df['5yr-avg_rdness']
    trace = go.Scatter(x = x, 
                        y = y, 
                        mode='markers',
                        customdata=region_df[["Region","Name"]],
                        hovertemplate=
                                    "Country: <b>%{customdata[1]}</b><br>" +
                                    "Region: %{customdata[0]} <br>" +
                                    "Vulnerability index: %{x} <br>" +
                                    "Readiness index: %{y} <br>"
                                    "<extra></extra>",
                        marker=dict(size=10,
                                    line_width=2,
                                    line_color='black'),
                        name=region)
    data.append(trace)

layout=go.Layout(title="Climate change vulnerability and readiness, by region",
                title_x=0.5,
                xaxis_title="Vulnerability index, 2015-2019 avg. (0 to 1, lower is better)",
                hovermode="closest",
                yaxis_title="Readiness index, 2015-2019 avg. (0 to 1, higher is better)",
                legend = dict(x=0.8, 
                            y=0.9, 
                            bgcolor='rgb(240,240,201)',
                            borderwidth=3,
                            title_text="Regions"))
fig=go.Figure(data=data, layout=layout)

pyo.plot(fig, filename="chart_2.html")

#####################################
data = []
full_data=full_data[~full_data['Name'].isin(['China', 'United States'])]
full_data['gdp_bn'] = full_data["5yr-avg_gdp"]/1000000000

for region in regions:
    region_df = full_data[full_data['Region']==region]
    x = region_df['5yr-avg_vuln']
    y = region_df['5yr-avg_rdness']
    s = region_df['5yr-avg_gdp']*0.00000000003
    customdata=[region_df["Region"],region_df["5yr-avg_gdp"]]
    trace = go.Scatter(x = x, 
                        y = y, 
                        mode='markers',
                        customdata=region_df[["Region","gdp_bn"]],
                        text = region_df["Name"],
                        hovertemplate=
                                    "Country: <b>%{text}</b><br>" +
                                    "Region: %{customdata[0]} <br>" +
                                    "Vulnerability index: %{x} <br>" +
                                    "Readiness index: %{y} <br>"
                                    "GDP (in $bn): %{customdata[1]:.2f}<br>" + 
                                    "<extra></extra>",
                        marker=dict(size=s,
                                    #opacity=0.7,
                                    line_width=2,
                                    line_color='black'),
                        name=region)
    data.append(trace)

layout=go.Layout(title="Climate change vulnerability, readiness and GDP, by region",
                title_x=0.5,
                xaxis_title="Vulnerability index, 2015-2019 avg. (0 to 1, lower is better)",
                hovermode="closest",
                yaxis_title="Readiness index, 2015-2019 avg. (0 to 1, higher is better)",
                legend = dict(x=0.8, 
                            y=0.9, 
                            bgcolor='rgb(240,240,201)',
                            borderwidth=3,
                            title_text="Regions"))
fig=go.Figure(data=data, layout=layout)

fig.add_annotation(x=0.5, y=1.05,xref='paper',yref='paper',
            text="Note: Bigger bubbles represent greater GDP",
            font_size=12,
            font_color='black',
            showarrow=False,
            bgcolor='rgb(240,240,201)'
            )
pyo.plot(fig, filename="chart_3.html")